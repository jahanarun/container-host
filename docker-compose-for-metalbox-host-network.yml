services:

  http-server:
    image: jhnrn/http-server-linux:latest
    container_name: "http-server"
    network_mode: host
    restart: always
    ports:
      - "3000:3000"

  omada-controller:
    container_name: omada-controller
    image: mbentley/omada-controller:${OMADA_VERSION}
    restart: unless-stopped
    ulimits:
      nofile:
        soft: 4096
        hard: 8192
    stop_grace_period: 60s
    network_mode: host
    environment:
      - PUID=508
      - PGID=508
      - MANAGE_HTTP_PORT=8088
      - MANAGE_HTTPS_PORT=8043
      - PORTAL_HTTP_PORT=8088
      - PORTAL_HTTPS_PORT=8843
      - PORT_APP_DISCOVERY=27001
      - PORT_ADOPT_V1=29812
      - PORT_UPGRADE_V1=29813
      - PORT_MANAGER_V1=29811
      - PORT_MANAGER_V2=29814
      - PORT_DISCOVERY=29810
      - SHOW_SERVER_LOGS=true
      - SHOW_MONGODB_LOGS=false
      - SSL_CERT_NAME=tls.crt
      - SSL_KEY_NAME=tls.key
      - TZ=${TZ}
    volumes:
      - ${DATA_STORAGE}/omada/data:/opt/tplink/EAPController/data
      - ${DATA_STORAGE}/omada/logs:/opt/tplink/EAPController/logs

  netdata:
    image: netdata/netdata:edge
    container_name: netdata-metalbox
    hostname: netdata-metalbox
    pid: host
    restart: unless-stopped
    network_mode: host
    cap_add:
      - SYS_PTRACE
      - SYS_ADMIN
      # - PERFMON
    privileged: true
    security_opt:
      - apparmor:unconfined
    devices:
      - /dev/dri:/dev/dri
    volumes:
      - ${DATA_STORAGE}/netdata-metalbox/config:/etc/netdata
      - ${DATA_STORAGE}/netdata-metalbox/lib:/var/lib/netdata
      - ${DATA_STORAGE}/netdata-metalbox/cache:/var/cache/netdata
      - /:/host/root:ro,rslave
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /etc/localtime:/etc/localtime:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /var/log:/host/var/log:ro
      # - /var/run/docker.sock:/var/run/docker.sock:ro
      - /run/dbus:/run/dbus:ro
    environment:
      - NETDATA_CLAIM_TOKEN=${NETDATA_CLAIM_TOKEN}
      - NETDATA_CLAIM_URL=${NETDATA_CLAIM_URL}
      - NETDATA_CLAIM_ROOMS=${NETDATA_CLAIM_ROOMS}
      - NETDATA_EXTRA_DEB_PACKAGES=apcupsd intel-gpu-tools lm-sensors
      - DOCKER_HOST=localhost:2375
    deploy:
      mode: global
    labels:
      - traefik.enable=true
      - traefik.http.routers.netdatamb.rule=Host(`netdatamb.${DOMAIN}`)
      - traefik.http.routers.netdatamb.tls.certresolver=certificato
      - traefik.http.routers.netdatamb.entrypoints=web,web-secure
      - traefik.http.services.netdatamb.loadbalancer.server.port=19999

  cetusguard:
    image: hectorm/cetusguard:v1
    network_mode: host
    read_only: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      CETUSGUARD_BACKEND_ADDR: unix:///var/run/docker.sock
      CETUSGUARD_FRONTEND_ADDR: tcp://:2375
      CETUSGUARD_RULES: |
        ! Inspect a container
        GET %API_PREFIX_CONTAINERS%/%CONTAINER_ID_OR_NAME%/json