networks:
  networks_traefik_proxy:
    external: true

  immich-family-network:
    driver: bridge
    internal: true

  immich-private-network:
    driver: bridge
    internal: true

  networks_vlan_80:
    external: true

services:
  immich-machine-learning:
    container_name: immich_machine_learning
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_ML_VERSION:-release}
    environment:
      OverrideGpuAddressSpace: 48 # for Openvino GPU
      NEOReadDebugKeys: 1 # for Openvino GPU
      LOG_LEVEL: ${LOG_LEVEL}
      # DEVICE: ${DEVICE}
    device_cgroup_rules:
      - 'c 189:* rmw'
    devices:
      - /dev/dri:/dev/dri
    group_add:
      - "${RENDER_GROUP_ID}" # Change this to match your "render" host group id (getent group render)
      - "${VIDEO_GROUP_ID}" # Change this to match your "video" host group id (getent group video)
    volumes:
      # - /dev/bus/usb:/dev/bus/usb
      - ${APPDATA}/immich/global/model-cache:/cache
      # - /dev/bus/usb:/dev/bus/usb
      # - /intel-compute:/intel-compute # temp fix https://github.com/immich-app/immich/discussions/11578#discussioncomment-10578825
    restart: always
    networks:
      immich-family-network:
      immich-private-network:
      networks_vlan_80:
        ipv4_address: ${IMMICH_MACHINE_LEARNING_IP_ADDRESS}
    labels:
      - dev.dozzle.group=immich-family

  immich-family-server:
    container_name: immich_family_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    # command: [ "start.sh", "immich" ]
    volumes:
      - ${ALBUM_PHOTOS}:/photos/album
      - ${USER1_PHOTOS}/2016:/photos/${USER1}/2016
      - ${USER1_PHOTOS}/2017:/photos/${USER1}/2017
      - ${USER1_PHOTOS}/2018:/photos/${USER1}/2018
      - ${USER1_PHOTOS}/2019:/photos/${USER1}/2019
      - ${USER1_PHOTOS}/2020:/photos/${USER1}/2020
      - ${USER1_PHOTOS}/2021:/photos/${USER1}/2021
      - ${USER1_PHOTOS}/2022:/photos/${USER1}/2022
      - ${USER1_PHOTOS}/2023:/photos/${USER1}/2023
      - ${USER1_PHOTOS}/2024:/photos/${USER1}/2024
      - ${USER1_PHOTOS}/2025:/photos/${USER1}/2025
      - ${USER2_PHOTOS}:/photos/${USER2}
      - ${APPDATA}/immich/family/upload:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    device_cgroup_rules:
      - 'c 189:* rmw'
    devices:
      - /dev/dri:/dev/dri # If using Intel QuickSync or VAAPI
      # - /dev/kfd # Remove this device if you don't use the OpenCL tone-mapping
    group_add:
      - "${RENDER_GROUP_ID}" # Change this to match your "render" host group id (getent group render)
      - "${VIDEO_GROUP_ID}" # Change this to match your "video" host group id (getent group video)
    environment:
      TZ: ${TZ}
      IMMICH_LOG_LEVEL: ${LOG_LEVEL:-log}
      DB_PASSWORD: ${IMMICH_DB_PASSWORD}
      DB_USERNAME: ${IMMICH_DB_USERNAME}
      DB_DATABASE_NAME: ${IMMICH_DB_DATABASE_NAME}
      DB_HOSTNAME: immich_family_postgres
      OverrideGpuAddressSpace: 48 # for Openvino GPU
      NEOReadDebugKeys: 1 # for Openvino GPU
      LOG_LEVEL: ${LOG_LEVEL}
    depends_on:
      - immich-family-redis
      - immich-family-database
    restart: always
    healthcheck:
      disable: false
    networks:
      immich-family-network:
      networks_traefik_proxy:
      networks_vlan_80:
        ipv4_address: ${IMMICH_FAMILY_SERVER_IP_ADDRESS}
    labels:
      - dev.dozzle.group=immich-family
      - traefik.enable=true
      - traefik.http.routers.immich.rule=Host(`photos.${DOMAIN}`)
      - traefik.http.routers.immich.middlewares=quantum_metal-ipallowlist
      - traefik.http.routers.immich.tls.certresolver=certificato
      - traefik.http.routers.immich.entrypoints=web,web-secure
      - traefik.http.services.immich.loadbalancer.server.port=2283
      - "traefik.docker.network=networks_traefik_proxy"
      - homepage.group=HeavyMetal
      - homepage.name=Immich
      - homepage.weight=8000
      - homepage.icon=immich.png
      - homepage.href=https://photos.${DOMAIN}/
      - homepage.description=Immich for family
      - homepage.widget.type=immich
      - homepage.widget.key=${IMMICH_FAMILY_API_KEY}
      - homepage.widget.url=https://photos.${DOMAIN}

  # immich-family-microservices:
  #   container_name: immich_family_microservices
  #   image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
  #   device_cgroup_rules:
  #     - 'c 189:* rmw'
  #   devices:
  #     - /dev/dri:/dev/dri # If using Intel QuickSync or VAAPI
  #     # - /dev/kfd # Remove this device if you don't use the OpenCL tone-mapping
  #   group_add:
  #     - "${RENDER_GROUP_ID}" # Change this to match your "render" host group id (getent group render)
  #     - "${VIDEO_GROUP_ID}" # Change this to match your "video" host group id (getent group video)
  #   command: [ "start.sh", "microservices" ]
  #   environment:
  #     DB_PASSWORD: ${IMMICH_DB_PASSWORD}
  #     DB_USERNAME: ${IMMICH_DB_USERNAME}
  #     DB_DATABASE_NAME: ${IMMICH_DB_DATABASE_NAME}
  #     DB_HOSTNAME: immich_family_postgres
  #     LOG_LEVEL: verbose
  #     # LIBVA_DRIVER_NAME: "radeonsi"
  #   volumes:
  #     - ${ALBUM_PHOTOS}:/photos/album
  #     - ${USER1_PHOTOS}/2016:/photos/${USER1}/2016
  #     - ${USER1_PHOTOS}/2017:/photos/${USER1}/2017
  #     - ${USER1_PHOTOS}/2018:/photos/${USER1}/2018
  #     - ${USER1_PHOTOS}/2019:/photos/${USER1}/2019
  #     - ${USER1_PHOTOS}/2020:/photos/${USER1}/2020
  #     - ${USER1_PHOTOS}/2021:/photos/${USER1}/2021
  #     - ${USER1_PHOTOS}/2022:/photos/${USER1}/2022
  #     - ${USER1_PHOTOS}/2023:/photos/${USER1}/2023
  #     - ${USER1_PHOTOS}/2024:/photos/${USER1}/2024
  #     - ${USER2_PHOTOS}:/photos/${USER2}
  #     - ${APPDATA}/immich/family/upload:/usr/src/app/upload
  #     - /etc/localtime:/etc/localtime:ro
  #     - /etc/timezone:/etc/timezone:ro
  #   depends_on:
  #     - immich-family-redis
  #     - immich-family-database
  #   restart: always
  #   healthcheck:
  #     disable: false
  #   networks:
  #     - immich-family-network
  #   labels:
  #     - dev.dozzle.group=immich-family

  immich-family-redis:
    container_name: immich_family_redis
    hostname: redis
    image: ${REDIS_IMAGE}
    command: ["redis-server", "--appendonly", "no", "--maxmemory", "500mb", "--maxmemory-policy", "allkeys-lru"]
    restart: always
    healthcheck:
      test: redis-cli ping || exit 1
    networks:
      - immich-family-network
    labels:
      - dev.dozzle.group=immich-family

  immich-family-database:
    container_name: immich_family_postgres
    image: ${PGVECTO_IMAGE}
    environment:
      POSTGRES_PASSWORD: ${IMMICH_DB_PASSWORD}
      POSTGRES_USER: ${IMMICH_DB_USERNAME}
      POSTGRES_DB: ${IMMICH_DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - ${APPDATA}/immich/family/database:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      # LIBVA_DRIVER_NAME: "radeonsi"
    networks:
      - immich-family-network
    labels:
      - dev.dozzle.group=immich-family
    restart: always
    # healthcheck:
    #   test: pg_isready --dbname='${IMMICH_DB_DATABASE_NAME}' --username='${IMMICH_DB_USERNAME}' || exit 1; Chksum="$$(psql --dbname='${IMMICH_DB_DATABASE_NAME}' --username='${IMMICH_DB_USERNAME}' --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
    #   interval: 5m
    # command:
    #   [
    #     'postgres',
    #     '-c',
    #     'shared_preload_libraries=vectors.so',
    #     '-c',
    #     'search_path="$$user", public, vectors',
    #     '-c',
    #     'logging_collector=on',
    #     '-c',
    #     'max_wal_size=2GB',
    #     '-c',
    #     'shared_buffers=512MB',
    #     '-c',
    #     'wal_compression=on',
    #   ]

  immich-private-server:
    container_name: immich_private_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    # command: [ "start.sh", "immich" ]
    volumes:
      - ${PRIVATE_USER_GALLERY}:/photos
      - ${THROWAWAY_FOLDER}:/throwaway
      - ${APPDATA}/immich/private/upload:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    device_cgroup_rules:
      - 'c 189:* rmw'
    devices:
      - /dev/dri:/dev/dri # If using Intel QuickSync or VAAPI
      # - /dev/kfd # Remove this device if you don't use the OpenCL tone-mapping
    group_add:
      - "${RENDER_GROUP_ID}" # Change this to match your "render" host group id (getent group render)
      - "${VIDEO_GROUP_ID}" # Change this to match your "video" host group id (getent group video)
    environment:
      TZ: ${TZ}
      IMMICH_LOG_LEVEL: ${LOG_LEVEL:-log}
      DB_PASSWORD: ${IMMICH_DB_PASSWORD}
      DB_USERNAME: ${IMMICH_DB_USERNAME}
      DB_DATABASE_NAME: ${IMMICH_DB_DATABASE_NAME}
      DB_HOSTNAME: immich_private_postgres
      OverrideGpuAddressSpace: 48 # for Openvino GPU
      NEOReadDebugKeys: 1 # for Openvino GPU
      LOG_LEVEL: ${LOG_LEVEL}
    depends_on:
      - immich-private-redis
      - immich-private-database
    restart: always
    networks:
      immich-private-network:
      networks_traefik_proxy:
      networks_vlan_80:
        ipv4_address: ${IMMICH_PRIVATE_SERVER_IP_ADDRESS}
    labels:
      - dev.dozzle.group=immich-private
      - traefik.enable=true
      - traefik.http.routers.immich-private.rule=Host(`private-viewer.${DOMAIN}`)
      - traefik.http.routers.immich-private.tls.certresolver=certificato
      - traefik.http.routers.immich-private.entrypoints=web,web-secure
      - traefik.http.routers.immich-private.middlewares=private-ipallowlist
      - traefik.http.services.immich-private.loadbalancer.server.port=2283
      - "traefik.docker.network=networks_traefik_proxy"
      - homepage.group=HeavyMetal
      - homepage.name=Immich (private)
      - homepage.weight=8001
      - homepage.icon=immich.png
      - homepage.href=https://private-viewer.${DOMAIN}/
      - homepage.description=Immich for private
      - homepage.widget.type=immich
      - homepage.widget.key=${IMMICH_PRIVATE_API_KEY}
      - homepage.widget.url=https://private-viewer.${DOMAIN}

  # immich-private-microservices:
  #   container_name: immich_private_microservices
  #   image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
  #   device_cgroup_rules:
  #     - 'c 189:* rmw'
  #   devices:
  #     - /dev/dri:/dev/dri # If using Intel QuickSync or VAAPI
  #     # - /dev/kfd # Remove this device if you don't use the OpenCL tone-mapping
  #   group_add:
  #     - "${RENDER_GROUP_ID}" # Change this to match your "render" host group id (getent group render)
  #     - "${VIDEO_GROUP_ID}" # Change this to match your "video" host group id (getent group video)
  #   command: [ "start.sh", "microservices" ]
  #   environment:
  #     DB_PASSWORD: ${IMMICH_DB_PASSWORD}
  #     DB_USERNAME: ${IMMICH_DB_USERNAME}
  #     DB_DATABASE_NAME: ${IMMICH_DB_DATABASE_NAME}
  #     DB_HOSTNAME: immich_private_postgres
  #     LOG_LEVEL: verbose
  #     # LIBVA_DRIVER_NAME: "radeonsi"
  #   volumes:
  #     - ${PRIVATE_USER_GALLERY}:/photos
  #     - ${APPDATA}/immich/private/upload:/usr/src/app/upload
  #     - /etc/localtime:/etc/localtime:ro
  #     - /etc/timezone:/etc/timezone:ro
  #   depends_on:
  #     - immich-private-redis
  #     - immich-private-database
  #   restart: always
  #   networks:
  #     - immich-private-network
  #   labels:
  #     - dev.dozzle.group=immich-private

  immich-private-redis:
    container_name: immich_private_redis
    hostname: redis
    image: ${REDIS_IMAGE}
    restart: always
    command: ["redis-server", "--appendonly", "no", "--maxmemory", "500mb", "--maxmemory-policy", "allkeys-lru"]
    networks:
      - immich-private-network
    labels:
      - dev.dozzle.group=immich-private

  immich-private-database:
    container_name: immich_private_postgres
    image: ${PGVECTO_IMAGE}
    environment:
      POSTGRES_PASSWORD: ${IMMICH_DB_PASSWORD}
      POSTGRES_USER: ${IMMICH_DB_USERNAME}
      POSTGRES_DB: ${IMMICH_DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - ${APPDATA}/immich/private/database:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    restart: always
    networks:
      - immich-private-network
    labels:
      - dev.dozzle.group=immich-private
